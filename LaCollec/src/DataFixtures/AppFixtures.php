<?php

namespace App\DataFixtures;

use Doctrine\Bundle\FixturesBundle\Fixture;
use Doctrine\Persistence\ObjectManager;
use App\Entity\Video;
use App\Entity\Videotheque;
use App\Entity\Member;
use App\Entity\Selection;

class AppFixtures extends Fixture
{
    // defines reference names for instances of Member
    const JEAN_CHARLES = 'jean-charles-member';
    const PEDRO = 'pedro-member';
    
    // defines reference names for instances of Videotheque
    private const JEAN_CHARLES_COLLEC_1 = 'jean-charles-collec-1';
    private const PEDRO_COLLEC_1 = 'pedro-collec-1';
    
    // defines reference names for instances of Selection
    private const JEAN_CHARLES_GAL_1 = 'jean-charles-galerie-1';
    private const JEAN_CHARLES_GAL_2 = 'jean-charles-galerie-2';
    private const PEDRO_GAL_1 = 'pedro-galerie-1';
    private const PEDRO_GAL_2 = 'pedro-galerie-2';
    
    /**
    * Generates initialization data for member: [nom, description]
    * @return \\Generator
    */
    private static function memberDataGenerator()
    {
        yield ["Jean-Charles", "Moi j'ai du goût", self::JEAN_CHARLES];
        yield ["Pedro", null, self::PEDRO];
    }
    /**
     * Generates initialization data for videotheque: [description]
     * @return \\Generator
     */
    
    private static function videothequeDataGenerator()
    {
        yield [self::JEAN_CHARLES, "La sélection pédante de Jean-Charles", self::JEAN_CHARLES_COLLEC_1];
        yield [self::PEDRO, "Ma collection de film !", self::PEDRO_COLLEC_1];
    }
    
    /**
     * Generates initialization data for selection: [description, publie]
     * @return \\Generator
     */
    
    private static function selectionDataGenerator()
    {
        yield [self::JEAN_CHARLES, "Bien mieux que ces Marvels à la con", true, self::JEAN_CHARLES_GAL_1];
        yield [self::JEAN_CHARLES, "C'était mieux avant", false, self::JEAN_CHARLES_GAL_2];
        yield [self::PEDRO, "Masterclass", true, self::PEDRO_GAL_1];
        yield [self::PEDRO, "Boom Boom !", true, self::PEDRO_GAL_2];
    }
    
    /**
     * Generates initialization data for video:
     *  [nom, annee, genre]
     * @return \\Generator
     */
    private static function videoGenerator()
    {
        yield [self::JEAN_CHARLES_COLLEC_1, "Citizen Kane", 1941, "Drame", [self::JEAN_CHARLES_GAL_2, self::JEAN_CHARLES_GAL_1]];
        yield [self::JEAN_CHARLES_COLLEC_1, "12 hommes en colère", 1957, "Drame", [self::JEAN_CHARLES_GAL_2, self::JEAN_CHARLES_GAL_1]];
        yield [self::JEAN_CHARLES_COLLEC_1, "Taxi Driver", 1976, "Drame", [self::JEAN_CHARLES_GAL_2]];
        yield [self::JEAN_CHARLES_COLLEC_1, "La mort aux trousses", 1959, "Thriller", [self::JEAN_CHARLES_GAL_1]];
        yield [self::JEAN_CHARLES_COLLEC_1, "2001 l'odyssée de l'espace", 1968, "Science-fiction", [self::JEAN_CHARLES_GAL_2, self::JEAN_CHARLES_GAL_1]];
        yield [self::PEDRO_COLLEC_1, "Avengers", 2012, "Action", [self::PEDRO_GAL_2]];
        yield [self::PEDRO_COLLEC_1, "Kingsman", 2014, "Action", [self::PEDRO_GAL_2, self::PEDRO_GAL_1]];
        yield [self::PEDRO_COLLEC_1, "Mad Max : Fury Road", 2015, "Action", [self::PEDRO_GAL_2,self::PEDRO_GAL_1]];
        yield [self::PEDRO_COLLEC_1, "Nos jours heureux", 2006, "Comédie", [self::PEDRO_GAL_1]];
        yield [self::PEDRO_COLLEC_1, "Mission cléopâtre", 2002, "Comédie", [self::PEDRO_GAL_1]];
    }
    
    public function load(ObjectManager $manager)
    {
        foreach (self::memberDataGenerator() as [$nom, $description, $memberReference] ) {
            $member = new Member();
            $member->setNom($nom);
            $member->setDescription($description);
            $manager->persist($member);
            $manager->flush();
            
            // Once the Member instance has been saved to DB
            // it has a valid Id generated by Doctrine, and can thus
            // be saved as a future reference
            $this->addReference($memberReference, $member);
            
        }
        
        foreach (self::videothequeDataGenerator() as [$memberReference, $description, $collecReference] ) {
            $member = $this->getReference($memberReference);
            $videotheque = new Videotheque();
            $videotheque->setDescription($description);
            $member->addVideotheque($videotheque);
            
            $manager->persist($videotheque);
            $manager->persist($member);
            $manager->flush();
            
            // Once the Videotheque instance has been saved to DB
            // it has a valid Id generated by Doctrine, and can thus
            // be saved as a future reference
            $this->addReference($collecReference, $videotheque);
        }
        
        foreach (self::selectionDataGenerator() as [$memberReference, $description, $publ, $selectReference] ) {
            $member = $this->getReference($memberReference);
            $selection = new Selection();
            $selection->setDescription($description);
            $selection->setPublie($publ);
            $member->addSelection($selection);
            
            $manager->persist($selection);
            $manager->persist($member);
            $manager->flush();
            
            // Once the Videotheque instance has been saved to DB
            // it has a valid Id generated by Doctrine, and can thus
            // be saved as a future reference
            $this->addReference($selectReference, $selection);
        }
        
        foreach (self::videoGenerator() as [$collecReference, $nom, $annee, $genre, $selectReferences])
        {
            // Retrieve the One-side instance of Videotheque from its reference name
            $videotheque = $this->getReference($collecReference);
            $video = new Video();
            $video->setNom($nom);
            $video->setAnnee($annee);
            $video->setGenre($genre);
            // Add the Many-side Video to its containing videotheque
            $videotheque->addContenu($video);
            foreach ($selectReferences as $selectReference) {
                $selection = $this->getReference($selectReference);
                $selection->addVideo($video);
                $manager->persist($selection);
            }
            
            $manager->persist($videotheque);
        }
        $manager->flush();
    }
}
